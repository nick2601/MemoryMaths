/// Utility class providing dialog information for various math game categories.
/// Contains methods to generate game-specific dialog information including
/// titles, descriptions, scoring rules, and visual assets.
import 'package:mathsgames/src/core/app_constant.dart';
import 'package:mathsgames/src/data/models/game_info_dialog.dart';
import 'package:tuple/tuple.dart';

class DialogInfoUtil {
  /// Generates dialog information for a specific game category.
  ///
  /// Returns a [GameInfoDialog] containing the game's:
  /// * Title
  /// * Description
  /// * Scoring rules
  /// * Visual assets
  /// * Theme colors
  static GameInfoDialog getInfoDialogData(GameCategoryType gameCategoryType) {
    // Theme color combinations for different game types
    var tuple1 = Tuple2(KeyUtil.primaryColor1, KeyUtil.bgColor1);
    var tuple2 = Tuple2(KeyUtil.primaryColor2, KeyUtil.bgColor2);
    var tuple3 = Tuple2(KeyUtil.primaryColor3, KeyUtil.bgColor3);
    switch (gameCategoryType) {
      case GameCategoryType.CALCULATOR:
        return GameInfoDialog(
            title: "Number Ninja",
            image: "assets/gif/calculator-intro.gif",
            dec: "üî¢ HOW TO PLAY:\n"
                "‚Ä¢ Solve mathematical equations using +, -, √ó, √∑\n"
                "‚Ä¢ Enter your answer using the number pad\n"
                "‚Ä¢ Work quickly - you're timed!\n\n"
                "üéØ OBJECTIVE: Calculate correct answers to earn points\n\n"
                "‚ö° TIP: Use the hint button if you get stuck!",
            correctAnswerScore: KeyUtil.calculatorScore,
            wrongAnswerScore: KeyUtil.calculatorScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.GUESS_SIGN:
        return GameInfoDialog(
            title: "Sign Seeker",
            image: "assets/gif/whats-the-sign-intro.gif",
            dec: "‚ùì HOW TO PLAY:\n"
                "‚Ä¢ Look at the equation with a missing operator\n"
                "‚Ä¢ Choose the correct sign: +, -, √ó, or √∑\n"
                "‚Ä¢ Make the equation mathematically correct\n\n"
                "üéØ OBJECTIVE: Find the missing mathematical operator\n\n"
                "üí° EXAMPLE: 8 ? 4 = 12 ‚Üí Answer: +",
            correctAnswerScore: KeyUtil.guessSignScore,
            wrongAnswerScore: KeyUtil.guessSignScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.SQUARE_ROOT:
        return GameInfoDialog(
            title: "Root Ranger",
            image: "assets/gif/sqroot-intro.gif",
            dec: "‚àö HOW TO PLAY:\n"
                "‚Ä¢ Find the square root of the given number\n"
                "‚Ä¢ Enter your answer using the number pad\n"
                "‚Ä¢ Remember: ‚àö16 = 4, ‚àö25 = 5, etc.\n\n"
                "üéØ OBJECTIVE: Calculate square roots correctly\n\n"
                "üìö TIP: Perfect squares get easier with practice!",
            correctAnswerScore: KeyUtil.squareRootScore,
            wrongAnswerScore: KeyUtil.squareRootScoreMinus,
            colorTuple: tuple2);

      case GameCategoryType.FIND_MISSING:
        return GameInfoDialog(
            title: "Missing Link",
            image: "assets/gif/correct-answer.gif",
            dec: "üîç HOW TO PLAY:\n"
                "‚Ä¢ Look at equations with missing numbers\n"
                "‚Ä¢ Select the correct number from options\n"
                "‚Ä¢ Complete the equation to make it true\n\n"
                "üéØ OBJECTIVE: Find missing numbers in equations\n\n"
                "üí° EXAMPLE: 5 + ? = 12 ‚Üí Answer: 7",
            correctAnswerScore: KeyUtil.findMissingScore,
            wrongAnswerScore: KeyUtil.findMissingScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.TRUE_FALSE:
        return GameInfoDialog(
            title: "Math Truths",
            image: "assets/gif/correct-answer.gif",
            dec: "‚úÖ‚ùå HOW TO PLAY:\n"
                "‚Ä¢ Read mathematical statements carefully\n"
                "‚Ä¢ Decide if the equation is TRUE or FALSE\n"
                "‚Ä¢ Tap your answer quickly - time matters!\n\n"
                "üéØ OBJECTIVE: Identify correct and incorrect equations\n\n"
                "üí° EXAMPLE: 6 √ó 3 = 18 ‚Üí TRUE",
            correctAnswerScore: KeyUtil.trueFalseScore,
            wrongAnswerScore: KeyUtil.trueFalseScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.DUAL_GAME:
        return GameInfoDialog(
            title: "Math Duel",
            image: "assets/gif/correct-answer.gif",
            dec: "üë• HOW TO PLAY:\n"
                "‚Ä¢ Two mathematical challenges appear simultaneously\n"
                "‚Ä¢ Solve both problems as quickly as possible\n"
                "‚Ä¢ Each player gets separate scoring\n\n"
                "üéØ OBJECTIVE: Outperform your opponent in math speed\n\n"
                "üèÜ STRATEGY: Balance speed with accuracy!",
            correctAnswerScore: KeyUtil.dualScore,
            wrongAnswerScore: KeyUtil.dualScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.COMPLEX_CALCULATION:
        return GameInfoDialog(
            title: "Operation Overload",
            image: "assets/gif/whats-the-sign-intro.gif",
            dec: "üßÆ HOW TO PLAY:\n"
                "‚Ä¢ Solve multi-step mathematical expressions\n"
                "‚Ä¢ Follow order of operations (PEMDAS/BODMAS)\n"
                "‚Ä¢ Choose the correct answer from options\n\n"
                "üéØ OBJECTIVE: Master complex mathematical calculations\n\n"
                "üìñ EXAMPLE: 2 √ó (5 + 3) - 4 = ?",
            correctAnswerScore: KeyUtil.complexCalculationScore,
            wrongAnswerScore: KeyUtil.complexCalculationScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.CUBE_ROOT:
        return GameInfoDialog(
            title: "Cube Quest",
            image: "assets/gif/correct-answer.gif",
            dec: "‚àõ HOW TO PLAY:\n"
                "‚Ä¢ Find the cube root of the given number\n"
                "‚Ä¢ Select your answer from the options\n"
                "‚Ä¢ Remember: ‚àõ8 = 2, ‚àõ27 = 3, etc.\n\n"
                "üéØ OBJECTIVE: Calculate cube roots accurately\n\n"
                "üß† TIP: Think 'what number √ó itself √ó itself = this?'",
            correctAnswerScore: KeyUtil.cubeRootScore,
            wrongAnswerScore: KeyUtil.cubeRootScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.NUMERIC_MEMORY:
        return GameInfoDialog(
            title: "Number Recall",
            image: "assets/gif/correct-answer.gif",
            dec: "üß† HOW TO PLAY:\n"
                "‚Ä¢ Watch the sequence of numbers appear\n"
                "‚Ä¢ Memorize the exact order and values\n"
                "‚Ä¢ Select the highlighted number from the grid\n"
                "‚Ä¢ No time limit - take your time to remember!\n\n"
                "üéØ OBJECTIVE: Test and improve your numerical memory\n\n"
                "üí° TIP: Create mental patterns to remember sequences",
            correctAnswerScore: KeyUtil.numericMemoryScore,
            wrongAnswerScore: KeyUtil.numericMemoryScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.CONCENTRATION:
        return GameInfoDialog(
            title: "Memory Match",
            image: "assets/gif/correct-answer.gif",
            dec: "üÉè HOW TO PLAY:\n"
                "‚Ä¢ Flip cards to reveal math expressions and answers\n"
                "‚Ä¢ Match equations with their correct solutions\n"
                "‚Ä¢ Remember card positions - no time pressure!\n"
                "‚Ä¢ Find all pairs to complete the level\n\n"
                "üéØ OBJECTIVE: Match all equation-answer pairs\n\n"
                "üß† STRATEGY: Focus on remembering card locations",
            correctAnswerScore: KeyUtil.concentrationScore,
            wrongAnswerScore: KeyUtil.concentrationScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.MATH_PAIRS:
        return GameInfoDialog(
            title: "Equation Match",
            image: "assets/gif/math-pair-intro.gif",
            dec: "üîó HOW TO PLAY:\n"
                "‚Ä¢ Cards show either equations OR answers\n"
                "‚Ä¢ Find and match equations with correct answers\n"
                "‚Ä¢ Tap two cards to check if they're a pair\n"
                "‚Ä¢ Complete all matches to win the level\n\n"
                "üéØ OBJECTIVE: Match all equation-answer pairs\n\n"
                "üí° EXAMPLE: Match '6 √ó 4' with '24'",
            correctAnswerScore: KeyUtil.mathematicalPairsScore,
            wrongAnswerScore: KeyUtil.mathematicalPairsScoreMinus,
            colorTuple: tuple2);

      case GameCategoryType.CORRECT_ANSWER:
        return GameInfoDialog(
            title: "Answer Ace",
            image: "assets/gif/correct-answer.gif",
            dec: "üéØ HOW TO PLAY:\n"
                "‚Ä¢ Read the mathematical question carefully\n"
                "‚Ä¢ Choose the correct answer from multiple options\n"
                "‚Ä¢ Work quickly but accurately for bonus points\n\n"
                "üéØ OBJECTIVE: Select correct answers from given choices\n\n"
                "‚ö° TIP: Eliminate obviously wrong answers first!",
            correctAnswerScore: KeyUtil.correctAnswerScore,
            wrongAnswerScore: KeyUtil.correctAnswerScoreMinus,
            colorTuple: tuple1);

      case GameCategoryType.MAGIC_TRIANGLE:
        return GameInfoDialog(
          title: "Triangle Magic",
          image: "assets/gif/magic-triangle-intro.gif",
          dec: "üî∫ HOW TO PLAY:\n"
              "‚Ä¢ Place numbers so each side adds up to the target sum\n"
              "‚Ä¢ Tap a circle, then tap a number to place it\n"
              "‚Ä¢ All three sides must equal the magic number\n"
              "‚Ä¢ Use each given number only once\n\n"
              "üéØ OBJECTIVE: Create a perfect magic triangle\n\n"
              "üß† STRATEGY: Start with corner numbers, they count twice!",
          correctAnswerScore: KeyUtil.magicTriangleScore,
          colorTuple: tuple3,
          wrongAnswerScore: KeyUtil.magicTriangleScore,
        );

      case GameCategoryType.MENTAL_ARITHMETIC:
        return GameInfoDialog(
          title: "Mind Math",
          colorTuple: tuple2,
          image: "assets/gif/mental-arith-intro.gif",
          dec: "üßÆ HOW TO PLAY:\n"
              "‚Ä¢ Watch numbers and operators appear one by one\n"
              "‚Ä¢ Remember the complete sequence in your mind\n"
              "‚Ä¢ Calculate from left to right (no operator precedence)\n"
              "‚Ä¢ Enter the final answer after animation ends\n\n"
              "üéØ OBJECTIVE: Perform mental calculations from memory\n\n"
              "üí° EXAMPLE: 5 + 3 √ó 2 = 16 (not 11!)",
          correctAnswerScore: KeyUtil.mentalArithmeticScore,
          wrongAnswerScore: KeyUtil.mentalArithmeticScoreMinus,
        );

      case GameCategoryType.QUICK_CALCULATION:
        return GameInfoDialog(
          title: "Flash Math",
          colorTuple: tuple1,
          image: "assets/gif/quick-calculation-intro.gif",
          dec: "‚ö° HOW TO PLAY:\n"
              "‚Ä¢ Solve equations as fast as possible\n"
              "‚Ä¢ Each correct answer gives you more time\n"
              "‚Ä¢ Wrong answers cost you precious seconds\n"
              "‚Ä¢ Keep the momentum going!\n\n"
              "üéØ OBJECTIVE: Solve as many equations as possible\n\n"
              "üèÉ BONUS: Speed matters - faster = more time!",
          correctAnswerScore: KeyUtil.quickCalculationScore,
          wrongAnswerScore: KeyUtil.quickCalculationScoreMinus,
        );

      case GameCategoryType.MATH_GRID:
        return GameInfoDialog(
          title: "Target Grid",
          colorTuple: tuple2,
          image: "assets/gif/math-machine-intro.gif",
          dec: "üî¢ HOW TO PLAY:\n"
              "‚Ä¢ See the target number at the top\n"
              "‚Ä¢ Select numbers from the grid below\n"
              "‚Ä¢ Add/combine them to reach the target\n"
              "‚Ä¢ Multiple solutions may be possible\n\n"
              "üéØ OBJECTIVE: Reach target using grid numbers\n\n"
              "üí° TIP: Look for different number combinations!",
          correctAnswerScore: KeyUtil.mathGridScore,
          wrongAnswerScore: KeyUtil.mathGridScore,
        );

      case GameCategoryType.PICTURE_PUZZLE:
        return GameInfoDialog(
          title: "Shape Solver",
          colorTuple: tuple3,
          image: "assets/gif/picture-puzzle-intro.gif",
          dec: "üñºÔ∏è HOW TO PLAY:\n"
              "‚Ä¢ Each shape represents a different number\n"
              "‚Ä¢ Use the given equations to find each shape's value\n"
              "‚Ä¢ Apply what you learned to solve the final equation\n"
              "‚Ä¢ Think logically step by step\n\n"
              "üéØ OBJECTIVE: Decode shapes to solve the puzzle\n\n"
              "üîç TIP: Start with the simplest equations first!",
          correctAnswerScore: KeyUtil.picturePuzzleScore,
          wrongAnswerScore: KeyUtil.picturePuzzleScore,
        );

      case GameCategoryType.NUMBER_PYRAMID:
        return GameInfoDialog(
          title: "Pyramid Sum",
          colorTuple: tuple3,
          image: "assets/gif/num-pyramid.gif",
          dec: "üèîÔ∏è HOW TO PLAY:\n"
              "‚Ä¢ Each cell equals the sum of two cells below it\n"
              "‚Ä¢ Fill in missing numbers following this rule\n"
              "‚Ä¢ Work from bottom to top, or top to bottom\n"
              "‚Ä¢ All numbers must follow the pyramid logic\n\n"
              "üéØ OBJECTIVE: Complete the number pyramid correctly\n\n"
              "üß† STRATEGY: Use known numbers to calculate unknowns!",
          correctAnswerScore: KeyUtil.numberPyramidScore,
          wrongAnswerScore: KeyUtil.numberPyramidScore,
        );
    }
  }
}
